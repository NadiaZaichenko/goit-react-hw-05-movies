{"version":3,"file":"static/js/485.00d0014e.chunk.js","mappings":"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","sources":["API/defaultImg.jsx","API/api.js","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import defaultImage from 'images/defaultImage.jpg';\n\nconst getImagePosterPath = (path)=> {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport default getImagePosterPath;\n\n","import axios from 'axios';\nimport getImagePosterPath from './defaultImg';\n\nconst API_KEY =  '8969e643fd094287d471f08caa30017f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies(page,controller) {\n  const responce = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`,  { signal: controller.signal });\n\n  const movies = responce.data.results.map(({ id, title, poster_path}) => {return {id, title, posterPath: getImagePosterPath(poster_path)}});\n\n  return {movies, totalPages: responce.data.total_pages};\n}\n\nexport async function getMovieByQuery(query, page=1, controller) {\n    const responce = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,  { signal: controller.signal });\n\n    const movies = responce.data.results.map(({id, title, poster_path })=> {\n        return {id, title, posterPath: getImagePosterPath(poster_path), }\n    })\n\n    return{ movies, totalPages: responce.data.total_pages,\n    totalResults: responce.data.total_results};\n};\n\nexport async function getMovieDetails (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, { signal: controller.signal});\n    const { title, poster_path, overview, genres, vote_average, release_date } =\n    responce.data;\n\n    return {\n        title,\n        posterPath: getImagePosterPath(poster_path),\n        overview,\n        genres: genres.map(genre => genre.name).join(', '),\n        vote: vote_average.toFixed(1),\n        year: release_date.slice(0, 4),\n      };\n};\n\nexport async function getMoviesCast (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`,{ signal: controller.signal});\n    const actors = responce.data.cast.map(({id, name, profile_path, character}) => \n    {return {id, name, profilePath: getImagePosterPath(profile_path), character}});\n    return actors; \n};\n\nexport async function getMovieRewies(movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`,{ signal: controller.signal});\n    const reviews = responce.data.results.map(({id, author,content}) => {return {id, author, content}});\n    return reviews;\n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const GalleryItem = styled.li`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\ntext-align: center;\nheight: auto;\nwidth: 240px;\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\nborder-radius: 10px;\nbackground-color: #063250;\nlist-style: none;\ntransform: scale(1);\ntransition: transform 250ms linear;\n\n&:hover {\n    transform: scale(1.04);\n  }\n`\n\nexport const Img = styled.img `\ndisplay: block;\nheight: 360px;\nwidth: 100%;\nborder-radius: 10px;\n`\n\nexport const Title = styled.h3`\nmargin: 0;\npadding: 14px;\nfont-size: 18px;\ncolor: #a3d1da;\n\n`;\nexport const LinkItem = styled(Link)`\nlist-style: none;\n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { GalleryItem, Img, Title,LinkItem } from \"./MoviesGalleryItem.styled\"\n\nconst MovieItem = ({movie: {id, title, posterPath}}) => {\n\n    const location = useLocation()\n  return(\n    <GalleryItem>\n        <LinkItem to={`/movies/${id}`} state = {{from: location}}>\n         <Img src={posterPath} alt={title} />\n         <Title>{title}</Title>\n        </LinkItem>\n    </GalleryItem>\n  )\n}\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string\n  }).isRequired\n}\n\nexport default MovieItem;","import styled from \"@emotion/styled\";\n\nexport const Gallery = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 15px;\nmargin-top: 30px;\nmargin-bottom: 30px;\npadding: 0;\n`;","import PropTypes from 'prop-types';\nimport MovieItem from \"components/MoviesGalleryItem/MoviesGalleryItem\"\nimport { Gallery } from \"./MovieGallery.styled\";\n\nconst MoviesGallery = ({movies}) => {\n    return(\n        <Gallery>\n            {movies.map(movie => (\n                <MovieItem \n                key={movie.id} \n                movie={movie}\n                />\n            ))}\n        </Gallery>\n    )\n}\nMoviesGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            posterPath: PropTypes.string,\n            overview: PropTypes.string,\n            genres: PropTypes.string,\n            vote: PropTypes.number,\n            year: PropTypes.string,  \n        }).isRequired\n    ).isRequired\n};\n\nexport default MoviesGallery;","import ReactPaginate from 'react-paginate';\nimport styled from \"@emotion/styled\";\n\n\nexport const Paginate = styled(ReactPaginate)`\nmargin-top: 50px;\nmargin-bottom: 50px;\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\ngap: 10px;\nlist-style-type: none;\npadding: 0;\n\nli a {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  width: 40px;\n  border-radius: 20px;\n  border: #a3d1da 2px solid;\n  text-decoration: none;\n  font-size: 14px;\n  color: #a3d1da;\n  cursor: pointer;\n}\n li.active a {\n  background-color: #2daac2;\n  border-color: transparent;\n  color: #FFFFFF;\n  font-size: 20px;\n}\nli.disabled a {\n  color: grey;\n}\nli.disable,\nli.disabled a {\n  cursor: default;\n}\n`","import { AiOutlineLeft } from \"react-icons/ai\";\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { Paginate } from \"./Pagination.styled\";\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({page, totalPages, changePage}) => {\n const handlePage = event => {\n    changePage(event.selected +1);\n };\n return (\n    <Paginate\n    previousLabel={<AiOutlineLeft />}\n      nextLabel={<AiOutlineRight />}\n      breakLabel=\"...\"\n      pageCount={totalPages}\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={2}\n      onPageChange={handlePage}\n      activeClassName=\"active\"\n      hrefBuilder={(page, pageCount) =>\n        page >= 1 && page <= pageCount ? `/page/${page}` : '#'\n      }\n      forcePage={page - 1}\n    />\n )\n};\nPagination.propTypes ={\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  totalPages: PropTypes.number.isRequired,\n  changePage:  PropTypes.func.isRequired,\n}\nexport default Pagination;","import styled from '@emotion/styled'\n\nexport const Main = styled.main`\npadding: 20px;\nbackground-color: #032644;\n`;\n\nexport const Container = styled.div `\n  \n`;\nexport const Title = styled.h1`\nfont-size: 32px;\ncolor: #a3d1da;\n`","import { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Main, Container, Title} from 'pages/Home/Home.styled';\nimport { getTrendingMovies } from 'API/api';\nimport MoviesGallery from 'components/MovieGallery/MovieGallery';\nimport Loader from 'components/Loader/Loader';\nimport Pagination from 'components/Pagination/Pagination';\n\n\n\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [totalPages, setTotalPages] = useState(0);\n    const [error, setError] = useState('');\n    const [page, setPage] = useState(1);\n\n    const navigate = useNavigate();\n    const params = useParams();\n\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n       async function addTrendingMovies() {\n          setStatus('pending');\n        try{\n            const trendingMovies = await getTrendingMovies(page, abortController);\n            setMovies(trendingMovies.movies);\n            setStatus('resolved');\n            setTotalPages(trendingMovies.totalPages);\n        }\n        catch (error) {\n            setError(error.message);\n            setStatus('rejected');\n        }\n       }\n       addTrendingMovies();\n\n       return() => {\n        abortController.abort();\n       };\n    },[page]);\n\n    useEffect(() => {\n        if(params.page) {\n            setPage(params.page);\n            return;\n        }\n        setPage(1);\n    }, [params.page]);\n\n    useEffect(() => {\n        if(error === 'canceled') {\n          return;\n        }\n        if(error) {\n          toast.error(error);\n          setError('');\n        }\n      }, [error])\n    \n\n    const changePage = currentPage => {\n        navigate(`/${currentPage}`);\n        setPage(currentPage);\n    }\n\n\n    return (<Main>\n        <Container>\n            {status === 'pending' && <Loader/>}\n            {status === 'resolved' &&  <Title>Trending Today</Title>}\n            {status === 'resolved' && <MoviesGallery movies={movies}/>}\n            {status === 'resolved' && (\n            <Pagination\n            page={page}\n            totalPages={totalPages}\n            changePage={changePage}\n            />\n            )}\n        </Container>\n    </Main>  \n    )\n}\n\nexport default Home;"],"names":["path","API_KEY","BASE_URL","getTrendingMovies","page","controller","axios","signal","responce","movies","data","results","map","id","title","poster_path","posterPath","getImagePosterPath","totalPages","total_pages","getMovieByQuery","query","totalResults","total_results","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","name","join","vote","toFixed","year","slice","getMoviesCast","actors","cast","profile_path","character","profilePath","getMovieRewies","reviews","author","content","GalleryItem","styled","Img","Title","LinkItem","Link","movie","location","useLocation","to","state","from","src","alt","Gallery","Paginate","ReactPaginate","changePage","previousLabel","nextLabel","breakLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","event","selected","activeClassName","hrefBuilder","forcePage","Main","Container","useState","setMovies","status","setStatus","setTotalPages","error","setError","setPage","navigate","useNavigate","params","useParams","useEffect","abortController","AbortController","trendingMovies","message","addTrendingMovies","abort","toast","Loader","Pagination","currentPage"],"sourceRoot":""}