{"version":3,"file":"static/js/897.7f0d64f9.chunk.js","mappings":"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","sources":["API/defaultImg.jsx","API/api.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import defaultImage from 'images/defaultImage.jpg';\n\nconst getImagePosterPath = (path)=> {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport default getImagePosterPath;\n\n","import axios from 'axios';\nimport getImagePosterPath from './defaultImg';\n\nconst API_KEY =  '8969e643fd094287d471f08caa30017f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies(page,controller) {\n  const responce = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`,  { signal: controller.signal });\n\n  const movies = responce.data.results.map(({ id, title, poster_path}) => {return {id, title, posterPath: getImagePosterPath(poster_path)}});\n\n  return {movies, totalPages: responce.data.total_pages};\n}\n\nexport async function getMovieByQuery(query, page=1, controller) {\n    const responce = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,  { signal: controller.signal });\n\n    const movies = responce.data.results.map(({id, title, poster_path })=> {\n        return {id, title, posterPath: getImagePosterPath(poster_path), }\n    })\n\n    return{ movies, totalPages: responce.data.total_pages,\n    totalResults: responce.data.total_results};\n};\n\nexport async function getMovieDetails (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, { signal: controller.signal});\n    const { title, poster_path, overview, genres, vote_average, release_date } =\n    responce.data;\n\n    return {\n        title,\n        posterPath: getImagePosterPath(poster_path),\n        overview,\n        genres: genres.map(genre => genre.name).join(', '),\n        vote: vote_average.toFixed(1),\n        year: release_date.slice(0, 4),\n      };\n};\n\nexport async function getMoviesCast (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`,{ signal: controller.signal});\n    const actors = responce.data.cast.map(({id, name, profile_path, character}) => \n    {return {id, name, profilePath: getImagePosterPath(profile_path), character}});\n    return actors; \n};\n\nexport async function getMovieRewies(movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`,{ signal: controller.signal});\n    const reviews = responce.data.results.map(({id, author,content}) => {return {id, author, content}});\n    return reviews;\n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const Main = styled.main`\npadding-top: 40px;\npadding-bottom: 40px;\nflex-grow: 1;\nbackground-color: #032644;\n`\nexport const Container = styled.div`\nmargin: 0 auto;\npadding: 0 20px;\n`;\nexport const ButtonLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 10px;\npadding: 12px;\nheight: 30px;\nwidth: 130px;\ntext-decoration: none;\nfont-size: 20px;\nfont-weight: 600;\ntext-align: center;\nbackground-color: #2daac2;\ncolor: #070316;\nborder-radius: 10px;\ntransition: color 250ms linear, background-color 250ms linear;\n&:hover,\n&:focus-visible {\n  background-color: #070316;\n  color: #2daac2;\n}\n`\nexport const Image = styled.img`\nwidth: 300px;\nheight: 100%;\nborder-radius: 10px;\n`\nexport const InfoMovie = styled.div`\ndisplay: flex;\nmargin-top: 30px;\ngap: 40px;\nmargin-bottom: 30px;\n`;\nexport const Navigate = styled.nav`\ndisplay: flex;\njustify-content: center;\ngap: 30px;\n`;\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const Title = styled.h1`\nfont-size: 24px;\ncolor: #FFFFFF;\n`;\nexport const Rate = styled.p`\n  display: flex;\n  color: #032644;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 30px;\n  background-color: #2daac2;\n  font-size: 18px;\n  border-radius: 5px;\n`;\n\nexport const H2 = styled.h2`\ncolor: #FFFFFF;\n`\nexport const P = styled.p`\ncolor: #FFFFFF;\n`","import { useLocation, Outlet } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Suspense } from \"react\";\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport Loader from \"components/Loader/Loader\";\nimport { Container, Image, InfoMovie, Navigate, ButtonLink, Title, Rate, Main, MovieInfoWrapper, H2, P } from \"./Movie.styled\";\n\n\nconst Movie = ({movie: { title, posterPath, overview, genres, vote, year }}) => {\n    const { state, pathname } = useLocation();\n\n    return(<Main>\n        <Container>\n    <ButtonLink to ={state?.from ?? '/'}>\n    <IoIosArrowRoundBack />\n        Go Back</ButtonLink>\n    <InfoMovie>\n        <Image src={posterPath} alt={title}/>\n    <div>\n        <MovieInfoWrapper>\n            <Title>{title}  ({year ? year: 'xxxx'})</Title>\n        {vote !== 0 && <Rate>{vote}</Rate>}\n        </MovieInfoWrapper>\n    <H2>Overview</H2>\n    {overview ? <P>{overview}</P> : 'Information is not available'}\n    <H2>Genres</H2>\n    {genres ? <P>{genres}</P> : 'Information is not available'}\n    </div>\n</InfoMovie>\n<Navigate>\n    <ButtonLink to ={pathname.includes('cast') ? '' : 'cast'}\n    state = {{from: state?.from ?? '/'}}>\n        {pathname.includes('cast') ? 'Hide Cast' : 'Show Cast'}\n    </ButtonLink>\n    <ButtonLink to={pathname.includes('reviews') ? '' : 'reviews'}\n    state = {{from: state?.from ?? '/'}}>\n        {pathname.includes('reviews') ? 'Hide Reviews' : 'Show Reviews'}\n    </ButtonLink>\n</Navigate>\n<Suspense fallback={<Loader/>}>\n    <Outlet />\n</Suspense>\n</Container>\n    </Main>\n\n)\n}\nMovie.propTypes ={ \n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        posterPath: PropTypes.string,\n        overview: PropTypes.string,\n        genres: PropTypes.string,\n        vote: PropTypes.string,\n        year: PropTypes.string,\n    }).isRequired\n}\n\nexport default Movie;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"components/Movie/Movie\";\nimport Loader from \"components/Loader/Loader\";\nimport { getMovieDetails } from \"API/api\";\nimport { toast } from \"react-toastify\";\n\nconst MovieDetails = () => {\n    const {movieId} = useParams();\n    const [movieDetails, setMovieDetails] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if(!movieId) return;\n\n        const abortController = new AbortController();\n\n        async function addMovieDetails() {\n            setStatus('pending');\n            try{\n                const movie = await getMovieDetails(movieId, abortController);\n            setMovieDetails(movie);\n            setStatus('resolved');\n            } catch (error){\n                setError(error.message);\n                setStatus('rejected');\n            }            \n        }\n        addMovieDetails();\n        return() => {\n            abortController.abort()\n        };\n    }, [movieId])\n\nuseEffect(() => {\n    if(error === 'canceled') {\n        return;\n    };\n    if(error) {\n        toast.error(error);\n        setError('');\n    }\n}, [error]);\n\nreturn (\n    <>\n    {status === 'pending' && <Loader/>}\n    {status === 'resolved' && <Movie movie={movieDetails}/>}\n    </>\n)\n}\n\nexport default MovieDetails;"],"names":["path","API_KEY","BASE_URL","getTrendingMovies","page","controller","axios","signal","responce","movies","data","results","map","id","title","poster_path","posterPath","getImagePosterPath","totalPages","total_pages","getMovieByQuery","query","totalResults","total_results","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","name","join","vote","toFixed","year","slice","getMoviesCast","actors","cast","profile_path","character","profilePath","getMovieRewies","reviews","author","content","Main","styled","Container","ButtonLink","Link","Image","InfoMovie","Navigate","MovieInfoWrapper","Title","Rate","H2","P","movie","useLocation","state","pathname","to","from","src","alt","includes","Suspense","fallback","Loader","useParams","useState","movieDetails","setMovieDetails","status","setStatus","error","setError","useEffect","abortController","AbortController","addMovieDetails","abort","message","toast"],"sourceRoot":""}