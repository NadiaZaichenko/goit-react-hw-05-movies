{"version":3,"file":"static/js/945.30412c78.chunk.js","mappings":"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","sources":["API/defaultImg.jsx","API/api.js","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","pages/Movie/Movie.styled.jsx","components/SearchForm/SearchFrom.styled.jsx","components/SearchForm/SearchFrom.jsx","pages/Movie/Movies.jsx"],"sourcesContent":["import defaultImage from 'images/defaultImage.jpg';\n\nconst getImagePosterPath = (path)=> {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport default getImagePosterPath;\n\n","import axios from 'axios';\nimport getImagePosterPath from './defaultImg';\n\nconst API_KEY =  '8969e643fd094287d471f08caa30017f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies(page,controller) {\n  const responce = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`,  { signal: controller.signal });\n\n  const movies = responce.data.results.map(({ id, title, poster_path}) => {return {id, title, posterPath: getImagePosterPath(poster_path)}});\n\n  return {movies, totalPages: responce.data.total_pages};\n}\n\nexport async function getMovieByQuery(query, page=1, controller) {\n    const responce = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,  { signal: controller.signal });\n\n    const movies = responce.data.results.map(({id, title, poster_path })=> {\n        return {id, title, posterPath: getImagePosterPath(poster_path), }\n    })\n\n    return{ movies, totalPages: responce.data.total_pages,\n    totalResults: responce.data.total_results};\n};\n\nexport async function getMovieDetails (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, { signal: controller.signal});\n    const { title, poster_path, overview, genres, vote_average, release_date } =\n    responce.data;\n\n    return {\n        title,\n        posterPath: getImagePosterPath(poster_path),\n        overview,\n        genres: genres.map(genre => genre.name).join(', '),\n        vote: vote_average.toFixed(1),\n        year: release_date.slice(0, 4),\n      };\n};\n\nexport async function getMoviesCast (movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`,{ signal: controller.signal});\n    const actors = responce.data.cast.map(({id, name, profile_path, character}) => \n    {return {id, name, profilePath: getImagePosterPath(profile_path), character}});\n    return actors; \n};\n\nexport async function getMovieRewies(movieId, controller) {\n    const responce = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`,{ signal: controller.signal});\n    const reviews = responce.data.results.map(({id, author,content}) => {return {id, author, content}});\n    return reviews;\n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const GalleryItem = styled.li`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\ntext-align: center;\nheight: auto;\nwidth: 240px;\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\nborder-radius: 10px;\nbackground-color: #063250;\nlist-style: none;\ntransform: scale(1);\ntransition: transform 250ms linear;\n\n&:hover {\n    transform: scale(1.04);\n  }\n`\n\nexport const Img = styled.img `\ndisplay: block;\nheight: 360px;\nwidth: 100%;\nborder-radius: 10px;\n`\n\nexport const Title = styled.h3`\nmargin: 0;\npadding: 14px;\nfont-size: 18px;\ncolor: #a3d1da;\n\n`;\nexport const LinkItem = styled(Link)`\nlist-style: none;\n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { GalleryItem, Img, Title,LinkItem } from \"./MoviesGalleryItem.styled\"\n\nconst MovieItem = ({movie: {id, title, posterPath}}) => {\n\n    const location = useLocation()\n  return(\n    <GalleryItem>\n        <LinkItem to={`/movies/${id}`} state = {{from: location}}>\n         <Img src={posterPath} alt={title} />\n         <Title>{title}</Title>\n        </LinkItem>\n    </GalleryItem>\n  )\n}\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string\n  }).isRequired\n}\n\nexport default MovieItem;","import styled from \"@emotion/styled\";\n\nexport const Gallery = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 15px;\nmargin-top: 30px;\nmargin-bottom: 30px;\npadding: 0;\n`;","import PropTypes from 'prop-types';\nimport MovieItem from \"components/MoviesGalleryItem/MoviesGalleryItem\"\nimport { Gallery } from \"./MovieGallery.styled\";\n\nconst MoviesGallery = ({movies}) => {\n    return(\n        <Gallery>\n            {movies.map(movie => (\n                <MovieItem \n                key={movie.id} \n                movie={movie}\n                />\n            ))}\n        </Gallery>\n    )\n}\nMoviesGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            posterPath: PropTypes.string,\n            overview: PropTypes.string,\n            genres: PropTypes.string,\n            vote: PropTypes.number,\n            year: PropTypes.string,  \n        }).isRequired\n    ).isRequired\n};\n\nexport default MoviesGallery;","import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\npadding: 15px;\nbackground-color: #032644;\n`","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\ngap: 15px;\n`;\n\nexport const Input = styled.input`\npadding: 10px 15px;\nborder-radius: 10px;\nfont-size: 16px;\nfont-weight: 500;\n`\nexport const Button = styled.button`\npadding: 10px 15px;\nborder-radius: 10px;\nborder: 0;\nfont-size: 18px;\nbackground-color: #14659e;\ncolor: #020f19;\nfont-weight: 700;\n &:hover:\n background-color: #359ce4;\n\n`","import PropTypes from 'prop-types';\nimport { useFormik } from \"formik\";\nimport { Input, Form, Button } from \"./SearchFrom.styled\";\n\nconst SearchForm = ({onSubmit}) => {\n    const formik = useFormik({\n        initialValues: {\n            value: '',\n        },\n        onSubmit: values => {\n            onSubmit(values.value);\n            localStorage.setItem('value', JSON.stringify(values.value));\n            // formik.resetForm();\n          },\n      })\n\n      const { handleSubmit, handleChange, values } = formik;\n\n      return (\n        <Form onSubmit={handleSubmit}>\n            <Input \n            type='text'\n            name='value'\n            onChange={handleChange}\n            value={values.value}\n            placeholder=\"Search movies\"/>\n            <Button type='submit'>Find</Button>\n        </Form>\n      )\n};\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};\n\n\nexport default SearchForm;","import { useState, useEffect } from \"react\";\nimport { getMovieByQuery } from \"API/api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Main } from \"./Movie.styled\";\n\nimport SearchForm from \"components/SearchForm/SearchFrom\";\nimport MoviesGallery from \"components/MovieGallery/MovieGallery\";\nimport Loader from \"components/Loader/Loader\";\n\n\n\nconst Movie = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState(searchParams.get('query'));\n    const [movies, setMovies] = useState([]);\n    const [status, setStatus] = useState('idle');;\n    const [notification, setNotification] = useState({ type: '', message: '' }); \n    const [page, setPage] = useState(searchParams.get('page'));\n\n    useEffect(() => {\n        if(!query) return;\n\n        const abortController = new AbortController();\n\n        async function addMovieByQuery () {\n            setStatus('pending');\n            try{\n                const {movies, totalResults} = await getMovieByQuery(query, page, abortController);\n                if(totalResults === 0) {\n                    setNotification({\n                        type: 'error',\n                        message: 'Sorry, there are no movies by your query. Try again'\n                    });\n                    setMovies([]);\n                    setQuery(null);\n                };\n            setMovies(movies);\n\n            setStatus('resolved')\n            }\n            catch (error){\n                setNotification({\n                    type: 'error',\n                    notification: error.message\n                })\n                setStatus('rejected');\n            }\n        };\n        addMovieByQuery();\n\n        return() => {\n            abortController.abort();\n        };\n    }, [page,query]);\n\n\n    useEffect(() => {\n        if(notification) {\n            function handleNotification() {\n                const notificationType = notification.type;\n                const notificationMes = notification.message;\n\n                if(notificationMes === 'canceled') {\n                    return;\n                }\n                if(notificationType === 'info') {\n                   toast.info(notificationMes);\n                   setNotification({type: '', message: ''});\n                };\n                if(notificationType === 'error') {\n                    toast.error(notificationMes);\n                    setNotification({type: '', message: ''});\n                 };\n            };\n            handleNotification();\n        }\n    }, [notification])\n\n    const handleSubmit = value => {\n       if(!value) {\n        setNotification({type: 'info', message: 'Please,enter your search query'});\n        return;\n       }\n       if(value === query) {\n        setNotification({type: 'info', message: 'You are viewing movies for this query '})\n        return;\n       };\n       setQuery(value);\n       setPage(1);\n       setSearchParams({query: value, page: 1});\n       setNotification({type: '', message: ''});\n       setStatus('idle');\n\n    }\n\n\n    return (<Main>\n        <SearchForm onSubmit={handleSubmit}/>\n        {status === 'pending' && <Loader/>}\n        {status === 'resolved' && <MoviesGallery movies={movies}/>}\n    </Main>\n\n    )\n}\n\nexport default Movie;"],"names":["path","API_KEY","BASE_URL","getTrendingMovies","page","controller","axios","signal","responce","movies","data","results","map","id","title","poster_path","posterPath","getImagePosterPath","totalPages","total_pages","getMovieByQuery","query","totalResults","total_results","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","name","join","vote","toFixed","year","slice","getMoviesCast","actors","cast","profile_path","character","profilePath","getMovieRewies","reviews","author","content","GalleryItem","styled","Img","Title","LinkItem","Link","movie","location","useLocation","to","state","from","src","alt","Gallery","Main","Form","Input","Button","onSubmit","formik","useFormik","initialValues","value","values","localStorage","setItem","JSON","stringify","handleSubmit","handleChange","type","onChange","placeholder","useSearchParams","searchParams","setSearchParams","useState","get","setQuery","setMovies","status","setStatus","message","notification","setNotification","setPage","useEffect","abortController","AbortController","addMovieByQuery","abort","notificationType","notificationMes","toast","handleNotification","Loader"],"sourceRoot":""}